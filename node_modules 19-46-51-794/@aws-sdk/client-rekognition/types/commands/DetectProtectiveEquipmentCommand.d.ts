import { RekognitionClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../RekognitionClient";
import { DetectProtectiveEquipmentRequest, DetectProtectiveEquipmentResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DetectProtectiveEquipmentCommandInput = DetectProtectiveEquipmentRequest;
export declare type DetectProtectiveEquipmentCommandOutput = DetectProtectiveEquipmentResponse & __MetadataBearer;
export declare class DetectProtectiveEquipmentCommand extends $Command<DetectProtectiveEquipmentCommandInput, DetectProtectiveEquipmentCommandOutput, RekognitionClientResolvedConfig> {
    readonly input: DetectProtectiveEquipmentCommandInput;
    constructor(input: DetectProtectiveEquipmentCommandInput);
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: RekognitionClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DetectProtectiveEquipmentCommandInput, DetectProtectiveEquipmentCommandOutput>;
    private serialize;
    private deserialize;
}
