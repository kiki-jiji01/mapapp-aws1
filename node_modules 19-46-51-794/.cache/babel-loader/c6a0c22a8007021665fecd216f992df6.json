{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { authService } from '../services/authentication';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  country_name: yup.string('Enter your country_name'),\n  //   .email('Enter a valid country_name')\n  //   .required('country_name is required'),\n  content: yup.string('Enter your content') //   .min(8, 'content should be of minimum 8 characters length')\n  //   .required('content is required'),\n\n});\nexport function Login() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    login\n  } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleSubmit = function handleSubmit(values) {\n    setLoading(true);\n    axios.post(API.auth.login, values).then(res => login(res.data.key)).then(res => {\n      history.push(`/countries`);\n    }).finally(() => setLoading(false));\n    return () => null;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    sx: {\n      marginTop: \"20vh\"\n    },\n    children: [loading && \"Loading...\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        name: \"password\",\n        label: \"password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        type: \"submit\",\n        sx: {\n          marginTop: 36\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this) // <div>\n  //     {loading && \"Loading...\"}\n  //     <Formik\n  //         initialValues={{\n  //             email: '',\n  //             password: '',\n  //         }}\n  //         onSubmit={handleSubmit}>\n  //         {({ errors, touched }) => (\n  //             <Form>\n  //                 <label htmlFor=\"email\">Email</label>\n  //                 <Field id=\"email\" name=\"email\" placeholder=\"Email\" />\n  //                 {touched.email && errors.email && <div>{errors.email}</div>}\n  //                 <label htmlFor=\"password\">Password</label>\n  //                 <Field id=\"password\" name=\"password\" type=\"password\" />\n  //                 {touched.password && errors.password && <div>{errors.password}</div>}\n  //                 <button type=\"submit\">Submit</button>\n  //             </Form>\n  //         )}\n  //     </Formik>\n  // </div>\n  ;\n}\n\n_s(Login, \"eNZcBuO9Pm+Q2xiVE7dodEEbMmY=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/Login.js"],"names":["useState","useContext","Formik","Field","Form","axios","API","authService","AuthContext","useHistory","yup","Container","useFormik","validationSchema","object","country_name","string","content","Login","loading","setLoading","login","history","handleSubmit","values","post","auth","then","res","data","key","push","finally","formik","initialValues","email","password","onSubmit","marginTop","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import { useState,useContext } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport { authService } from '../services/authentication';\nimport { AuthContext } from '../contexts/AuthContext'\nimport {useHistory} from 'react-router-dom';\nimport * as yup from 'yup';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\n\nconst validationSchema = yup.object({\n    country_name: yup\n      .string('Enter your country_name'),\n    //   .email('Enter a valid country_name')\n    //   .required('country_name is required'),\n    content: yup\n      .string('Enter your content')\n    //   .min(8, 'content should be of minimum 8 characters length')\n    //   .required('content is required'),\n  });\n\nexport function Login() {\n    const [loading, setLoading] = useState(false)\n    const { login } = useContext(AuthContext)\n    const history = useHistory();\n\n    const handleSubmit = function handleSubmit(values) {\n        setLoading(true)\n        axios.post(API.auth.login, values)\n            .then(res =>  login(res.data.key))\n            .then(res => {\n                history.push(`/countries`)\n            })\n            .finally(() => setLoading(false))\n        return () => null\n    }\n\n    const formik = useFormik({\n        initialValues: {\n          email: '',\n          password: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit\n      });\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" sx={{ marginTop: \"20vh\"}}>\n            {loading && \"Loading...\"}\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                label=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n                />\n                <TextField\n                fullWidth\n                id=\"password\"\n                name=\"password\"\n                label=\"password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={formik.touched.password && Boolean(formik.errors.password)}\n                helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button  variant=\"contained\" fullWidth type=\"submit\" sx={{ marginTop: 36}}>\n                Submit\n                </Button>\n            </form>\n           \n        </Container>\n        // <div>\n        //     {loading && \"Loading...\"}\n        //     <Formik\n        //         initialValues={{\n        //             email: '',\n        //             password: '',\n        //         }}\n        //         onSubmit={handleSubmit}>\n\n        //         {({ errors, touched }) => (\n        //             <Form>\n        //                 <label htmlFor=\"email\">Email</label>\n        //                 <Field id=\"email\" name=\"email\" placeholder=\"Email\" />\n        //                 {touched.email && errors.email && <div>{errors.email}</div>}\n\n        //                 <label htmlFor=\"password\">Password</label>\n        //                 <Field id=\"password\" name=\"password\" type=\"password\" />\n        //                 {touched.password && errors.password && <div>{errors.password}</div>}\n\n        //                 <button type=\"submit\">Submit</button>\n        //             </Form>\n        //         )}\n\n        //     </Formik>\n        // </div>\n    )\n\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}