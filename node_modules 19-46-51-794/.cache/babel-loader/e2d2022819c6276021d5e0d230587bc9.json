{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/components/Map.js\";\nimport React from \"react\";\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport AutoComplete from 'react-google-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM\");\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      address: \"\",\n      city: \"\",\n      area: \"\",\n      state: \"\",\n      zoom: \"15\",\n      height: \"400\",\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]) {\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0]) {\n          for (let j = 0; j < addressArray.length; j++) {\n            if ('sublocalty_level_1' === addressArray[index].types[j] || 'localty' === addressArray[index].types[j]) {\n              area = addressArray[index].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        for (let index = 0; index < addressArray.length; index++) {\n          if (addressArray[index].types[0] && 'administrative_area_level_1' === addressArray[index].types[0]) {\n            state = addressArray[index].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          city: city ? city : \"\",\n          area: area ? area : \"\",\n          state: state ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        types: ['(regions)'],\n        onPlaceSelected: this.onPlaceSelected,\n        style: {\n          width: '100%',\n          height: '40px',\n          paddingLeft: '16px',\n          marginTop: '2px',\n          marginBottom: '2rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `400px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/components/Map.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","AutoComplete","setApiKey","Map","Component","state","videos","selectedVideo","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","index","length","types","long_name","getArea","j","getState","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","address_components","setState","render","MapWithAMarker","props","onPlaceSelected","width","paddingLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport AutoComplete from 'react-google-autocomplete';\nGeocode.setApiKey(\"AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM\")\n\n\n\nclass Map extends React.Component{\n\n\n        state = {\n\n\n          videos:[],\n          selectedVideo: null,\n\n          address :\"\",\n          city :\"\",\n          area :\"\",\n          state :\"\",\n          zoom :\"15\",\n          height :\"400\",\n          mapPosition : {\n            lat:0,\n            lng:0,\n          },\n          markerPosition :{\n            lat:0,\n            lng:0,\n          },\n        }\n\n        getCity = (addressArray) => {\n          let city = '';\n          for(let index=0; index<addressArray.length; index++) {\n            if(addressArray[index].types[0]&&'administrative_area_level_2' === addressArray[index].types[0]) {\n             city=addressArray[index].long_name;\n             return city;\n            }\n          }\n        }\n      \n      getArea=(addressArray) => {\n        let area = '';\n        for(let index=0; index<addressArray.length; index++) {\n          if(addressArray[index].types[0]){\n            for(let j =0; j<addressArray.length; j++) {\n              if('sublocalty_level_1' === addressArray[index].types[j] || 'localty' ===addressArray[index].types[j]) {\n            area = addressArray[index].long_name;\n            return area;\n            }\n           }\n          }\n         }\n        }\n      \n      getState =(addressArray) => {\n        let state = '';\n        for(let index=0; index<addressArray.length; index++) {\n          for(let index=0; index<addressArray.length; index++) {\n            if(addressArray[index].types[0] && 'administrative_area_level_1' ===addressArray[index].types[0]) {\n              state = addressArray[index].long_name;\n              return state;\n            }\n          }\n        }\n      }\n\n\n        onMarkerDragEnd= (event) => {\n          let newLat = event.latLng.lat();\n          let newLng = event.latLng.lng();\n     \n     \n          Geocode.fromLatLng(newLat,newLng)\n          .then(response => {\n           console.log('response', response)\n           const address = response.results[0].formatted_address,\n                 addressArray = response.results[0].address_components,\n                 city = this.getCity(addressArray),\n                 area = this.getArea(addressArray),\n                 state = this.getState(addressArray);\n     \n             this.setState({\n               address : (address) ? address : \"\",\n               city : (city) ? city: \"\",\n               area : (area) ? area: \"\",\n               state: (state)? state: \"\",\n               markerPosition: {\n                 lat:newLat,\n                 lng:newLng\n               },\n               mapPosition: {\n                 lat:newLat,\n                 lng:newLng\n               }\n             })\n          })\n       }\n     \n\n   \n    render(){\n              const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n                <GoogleMap\n                  defaultZoom={8}\n                  defaultCenter={{ lat: this.state.mapPosition.lat , lng: this.state.mapPosition.lng }}\n                >\n                 \n                  <Marker\n                    draggable={true}\n                    onDragEnd={this.onMarkerDragEnd}\n                    position={{ lat: this.state.markerPosition.lat , lng: this.state.markerPosition.lng}}\n                  >\n                    <InfoWindow>\n                      <div>\n                      \n                      </div>\n                   </InfoWindow>\n                  </Marker>\n\n                  \n                  <AutoComplete\n                    types={['(regions)']}\n                    onPlaceSelected= {this.onPlaceSelected}\n                    \n                    style={{\n                      width: '100%',\n                      height: '40px',\n                      paddingLeft: '16px',\n                      marginTop: '2px',\n                      marginBottom: '2rem'\n                  }}\n                  />\n                </GoogleMap>\n              ));\n\n\n        return(\n         \n          <MapWithAMarker\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM&v=3.exp&libraries=geometry,drawing,places\"\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `400px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n        );\n    }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}