{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/components/Map.js\";\nimport React from \"react\";\nimport { InfoWindow, withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport AutoComplete from 'react-google-autocomplete';\nimport { Grid } from '@material-ui/core';\nimport youtube from './youtube';\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport styled from \"styled-components\";\nimport VideoDetail from './VideoDetail';\nimport Dashboard from \"./Dashboard\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(\"AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM\");\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      // selectedVideo: null,\n      foodvideos: [],\n      // foodselectedVideo: null,\n      workvideos: [],\n      // workselectedVideo: null,\n      dhksc: \"\",\n      address: \"\",\n      city: \"\",\n      area: \"\",\n      state: \"\",\n      zoom: \"15\",\n      height: \"400\",\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0] && 'administrative_area_level_2' === addressArray[index].types[0]) {\n          city = addressArray[index].long_name;\n          return city;\n        }\n      }\n    };\n\n    this.getArea = addressArray => {\n      let area = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        if (addressArray[index].types[0]) {\n          for (let j = 0; j < addressArray.length; j++) {\n            if ('sublocalty_level_1' === addressArray[index].types[j] || 'localty' === addressArray[index].types[j]) {\n              area = addressArray[index].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let index = 0; index < addressArray.length; index++) {\n        for (let index = 0; index < addressArray.length; index++) {\n          if (addressArray[index].types[0] && 'administrative_area_level_1' === addressArray[index].types[0]) {\n            state = addressArray[index].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        console.log('response', response);\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : \"\",\n          city: city ? city : \"\",\n          area: area ? area : \"\",\n          state: state ? state : \"\",\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      });\n    };\n\n    this.handleSubmit = async termFromSearchBar => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: termFromSearchBar\n        }\n      });\n      this.setState({\n        videos: response.data.items // selectedVideo:response.data.items[0] \n\n      });\n      console.log(\"this is resp\", response);\n    };\n\n    this.FoodhandleSubmit = async termFromSearchBar => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: 'food' + termFromSearchBar\n        }\n      });\n      this.setState({\n        foodvideos: response.data.items // foodselectedVideo:response.data.items[0] \n\n      });\n      console.log(\"this is resp\", response);\n    };\n\n    this.WorkhandleSubmit = async termFromSearchBar => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: 'work' + termFromSearchBar\n        }\n      });\n      this.setState({\n        workvideos: response.data.items // workselectedVideo:response.data.items[0] \n\n      });\n      console.log(\"this is resp\", response);\n    };\n\n    this.onPlaceSelected = place => {\n      const address = place.formatted_address,\n            addressArray = place.address_components,\n            // plus\n      dhksc = place.address_components[0].long_name,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            newLat = place.geometry.location.lat(),\n            newLng = place.geometry.location.lng(); //   const handleSubmit = async (termFromSearchBar) => {\n      //     const response = await youtube.get('/search', {\n      //         params: {\n      //             q: termFromSearchBar\n      //         }\n      //     })\n      //     this.setState({\n      //       videos: response.data.items,\n      //       selectedVideo:response.data.items[0] \n      //     });\n      //     console.log(\"this is resp\",response);\n      // };\n      // Set these values in the state.\n\n      this.setState({\n        address: address ? address : '',\n        area: area ? area : '',\n        city: city ? city : '',\n        state: state ? state : '',\n        dhksc: dhksc ? dhksc : '',\n        // plus\n        markerPosition: {\n          lat: newLat,\n          lng: newLng\n        },\n        mapPosition: {\n          lat: newLat,\n          lng: newLng\n        }\n      });\n      this.handleSubmit(dhksc);\n      this.FoodhandleSubmit(dhksc);\n      this.WorkhandleSubmit(dhksc);\n      console.log(place);\n      console.log(dhksc);\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          mapPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          markerPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          }\n        }, () => {\n          Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n            const address = response.results[0].formatted_address,\n                  addressArray = response.results[0].address_components,\n                  city = this.getCity(addressArray),\n                  area = this.getArea(addressArray),\n                  state = this.getState(addressArray);\n            this.setState({\n              address: address ? address : \"\",\n              city: city ? city : \"\",\n              area: area ? area : \"\",\n              state: state ? state : \"\"\n            });\n          });\n        });\n      });\n    }\n  }\n\n  //    handleVideoSelect = (video) => {\n  //     this.setState({\n  //         selectedVideo: video\n  //     })\n  // }\n  render() {\n    const MapWithAMarker = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: this.state.markerPosition.lat,\n          lng: this.state.markerPosition.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(AutoComplete, {\n        types: ['(country)'],\n        onPlaceSelected: this.onPlaceSelected,\n        style: {\n          width: '100%',\n          height: '40px',\n          paddingLeft: '16px',\n          marginTop: '2px',\n          marginBottom: '2rem',\n          zIndex: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MapWrapper, {\n        children: /*#__PURE__*/_jsxDEV(MapWithAMarker, {\n          googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM&v=3.exp&libraries=geometry,drawing,places\",\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 31\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VideoWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          justify: \"center\",\n          container: true,\n          spacing: 2,\n          className: \"grid\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            justify: \"center\",\n            item: true,\n            xs: 4,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(VideoList, {\n                handleVideoSelect: this.handleVideoSelect,\n                videos: this.state.videos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            justify: \"center\",\n            item: true,\n            xs: 4,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(VideoList, {\n                handleVideoSelect: this.handleVideoSelect,\n                videos: this.state.foodvideos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            justify: \"center\",\n            item: true,\n            xs: 4,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(VideoList, {\n                handleVideoSelect: this.handleVideoSelect,\n                videos: this.state.workvideos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Map;\nconst MapWrapper = styled.div`\nheight: 30vh;\nposition: relative;\n\n`;\n_c = MapWrapper;\nconst VideoWrapper = styled.div`\nheight: 200vh;\nposition: relative;\ntop:50vh;\n`;\n_c2 = VideoWrapper;\nconst Insta = styled.div`\nheight: 10vh;\nposition: relative;\n\n`; // const Search= styled.div`\n// height: 5vh;\n// position: absolute;\n// top: -10vh;\n// width: 30%;\n// margin: auto;\n// `\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapWrapper\");\n$RefreshReg$(_c2, \"VideoWrapper\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/components/Map.js"],"names":["React","InfoWindow","withScriptjs","withGoogleMap","GoogleMap","Marker","Geocode","AutoComplete","Grid","youtube","SearchBar","VideoList","styled","VideoDetail","Dashboard","zIndex","setApiKey","Map","Component","state","videos","foodvideos","workvideos","dhksc","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","index","length","types","long_name","getArea","j","getState","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","console","log","results","formatted_address","address_components","setState","handleSubmit","termFromSearchBar","get","params","q","data","items","FoodhandleSubmit","WorkhandleSubmit","onPlaceSelected","place","geometry","location","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","render","MapWithAMarker","props","width","paddingLeft","marginTop","marginBottom","handleVideoSelect","MapWrapper","div","VideoWrapper","Insta"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  InfoWindow,\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport AutoComplete from 'react-google-autocomplete';\nimport { Grid } from '@material-ui/core';\nimport youtube from './youtube';\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport styled from \"styled-components\"\nimport VideoDetail from './VideoDetail';\nimport Dashboard from \"./Dashboard\";\nimport zIndex from \"@material-ui/core/styles/zIndex\";\n\n\nGeocode.setApiKey(\"AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM\")\n\n\n\nclass Map extends React.Component{\n\n\n        state = {\n\n\n          videos:[],\n          // selectedVideo: null,\n          foodvideos:[],\n          // foodselectedVideo: null,\n          workvideos:[],\n          // workselectedVideo: null,\n\n          dhksc: \"\",\n         \n          address :\"\",\n          city :\"\",\n          area :\"\",\n          state :\"\",\n          zoom :\"15\",\n          height :\"400\",\n          mapPosition : {\n            lat:0,\n            lng:0,\n          },\n          markerPosition :{\n            lat:0,\n            lng:0,\n          },\n        }\n\n\n\n        componentDidMount() {\n          if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition( position => {\n              this.setState({\n                mapPosition :{\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n                markerPosition: {\n                  lat:position.coords.latitude,\n                  lng:position.coords.longitude,\n                }\n              },() => {\n                Geocode.fromLatLng(position.coords.latitude,position.coords.longitude)\n                .then(response => {\n      \n                 const address = response.results[0].formatted_address,\n                       addressArray = response.results[0].address_components,\n                       city = this.getCity(addressArray),\n                       area = this.getArea(addressArray),\n                       state = this.getState(addressArray);\n      \n                   this.setState({\n                     address : (address) ? address : \"\",\n                     city : (city) ? city: \"\",\n                     area : (area) ? area: \"\",\n                     state: (state)? state: \"\",\n              })\n            })\n          })\n        })\n       }\n      }\n      \n\n        getCity = (addressArray) => {\n          let city = '';\n          for(let index=0; index<addressArray.length; index++) {\n            if(addressArray[index].types[0]&&'administrative_area_level_2' === addressArray[index].types[0]) {\n             city=addressArray[index].long_name;\n             return city;\n            }\n          }\n        }\n      \n      getArea=(addressArray) => {\n        let area = '';\n        for(let index=0; index<addressArray.length; index++) {\n          if(addressArray[index].types[0]){\n            for(let j =0; j<addressArray.length; j++) {\n              if('sublocalty_level_1' === addressArray[index].types[j] || 'localty' ===addressArray[index].types[j]) {\n            area = addressArray[index].long_name;\n            return area;\n            }\n           }\n          }\n         }\n        }\n      \n      getState =(addressArray) => {\n        let state = '';\n        for(let index=0; index<addressArray.length; index++) {\n          for(let index=0; index<addressArray.length; index++) {\n            if(addressArray[index].types[0] && 'administrative_area_level_1' ===addressArray[index].types[0]) {\n              state = addressArray[index].long_name;\n              return state;\n            }\n          }\n        }\n      }\n\n\n        onMarkerDragEnd= (event) => {\n          let newLat = event.latLng.lat();\n          let newLng = event.latLng.lng();\n     \n     \n          Geocode.fromLatLng(newLat,newLng)\n          .then(response => {\n           console.log('response', response)\n           const address = response.results[0].formatted_address,\n                 addressArray = response.results[0].address_components,\n                 city = this.getCity(addressArray),\n                 area = this.getArea(addressArray),\n                 state = this.getState(addressArray);\n     \n             this.setState({\n               address : (address) ? address : \"\",\n               city : (city) ? city: \"\",\n               area : (area) ? area: \"\",\n               state: (state)? state: \"\",\n               markerPosition: {\n                 lat:newLat,\n                 lng:newLng\n               },\n               mapPosition: {\n                 lat:newLat,\n                 lng:newLng\n               }\n             })\n          })\n       }\n\n\n\n       handleSubmit = async (termFromSearchBar) => {\n        const response = await youtube.get('/search', {\n            params: {\n                q: termFromSearchBar\n            }\n        })\n\n        this.setState({\n          videos: response.data.items,\n          // selectedVideo:response.data.items[0] \n        });\n        console.log(\"this is resp\",response);\n    };\n\n\n    FoodhandleSubmit = async (termFromSearchBar) => {\n      const response = await youtube.get('/search', {\n          params: {\n              q: 'food'+termFromSearchBar\n          }\n      })\n\n      this.setState({\n        foodvideos: response.data.items,\n        // foodselectedVideo:response.data.items[0] \n      });\n      console.log(\"this is resp\",response);\n  };\n    \n\n  WorkhandleSubmit = async (termFromSearchBar) => {\n    const response = await youtube.get('/search', {\n        params: {\n            q: 'work'+termFromSearchBar\n        }\n    })\n\n    this.setState({\n      workvideos: response.data.items,\n      // workselectedVideo:response.data.items[0] \n    });\n    console.log(\"this is resp\",response);\n};\n\n\n\n\n\n       onPlaceSelected = (place) => {\n        const address = place.formatted_address,\n              addressArray = place.address_components,\n               // plus\n              dhksc = place.address_components[0].long_name,\n         \n              city = this.getCity(addressArray),\n              area = this.getArea(addressArray),\n              state = this.getState(addressArray),\n              newLat = place.geometry.location.lat(),\n              newLng = place.geometry.location.lng();\n              \n              \n      //   const handleSubmit = async (termFromSearchBar) => {\n      //     const response = await youtube.get('/search', {\n      //         params: {\n      //             q: termFromSearchBar\n      //         }\n      //     })\n  \n      //     this.setState({\n      //       videos: response.data.items,\n      //       selectedVideo:response.data.items[0] \n      //     });\n      //     console.log(\"this is resp\",response);\n      // };\n  \n        \n          // Set these values in the state.\n          this.setState({\n            address: (address) ? address : '',\n            area: (area) ? area : '',\n            city: (city) ? city : '',\n            state: (state) ? state : '',\n            dhksc: (dhksc) ? dhksc : '', \n         　\n            // plus\n              markerPosition: {　\n                  lat: newLat,\n                  lng: newLng\n              },\n              mapPosition: {\n                  lat: newLat,\n                  lng: newLng\n              },\n          })\n          \n          this.handleSubmit(dhksc)\n          this.FoodhandleSubmit(dhksc)\n          this.WorkhandleSubmit(dhksc)\n          console.log(place)\n          console.log(dhksc)\n          \n       }\n      \n       \n    //    handleVideoSelect = (video) => {\n    //     this.setState({\n    //         selectedVideo: video\n    //     })\n    // }\n\n    \n  \n   \n    render(){\n              const MapWithAMarker = withScriptjs(withGoogleMap(props =>\n                <GoogleMap\n                  defaultZoom={8}\n                  defaultCenter={{ lat: this.state.mapPosition.lat , lng: this.state.mapPosition.lng }}\n                >\n                 \n                  <Marker\n                    draggable={true}\n                    onDragEnd={this.onMarkerDragEnd}\n                    position={{ lat: this.state.markerPosition.lat , lng: this.state.markerPosition.lng}}\n                  >\n                    <InfoWindow>\n                      <div>\n                       {this.state.address}\n                      </div>\n                   </InfoWindow>\n                  </Marker>\n\n                  {/* <Search> */}\n                  <AutoComplete\n                    \n                    types={['(country)']}\n                    onPlaceSelected= {this.onPlaceSelected}\n                    \n                    style={{\n                      width: '100%',\n                      height: '40px',\n                      paddingLeft: '16px',\n                      marginTop: '2px',\n                      marginBottom: '2rem',\n                      zIndex:'1px',\n                      \n                  }}\n                  />\n                  {/* </Search> */}\n                </GoogleMap>\n              ));\n\n\n        return(\n         <div>\n        \n           \n          <MapWrapper>\n           \n               <MapWithAMarker\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCGX39_vj1YuXzup9jOmR29Iw_u_5Y4JQM&v=3.exp&libraries=geometry,drawing,places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n               />\n          \n         </MapWrapper>\n         \n         <VideoWrapper> \n         <Grid justify=\"center\"  container spacing={2} className=\"grid\">\n          \n            <Grid justify=\"center\"  item xs={4} justifyContent=\"center\" alignItems=\"center\" >\n\n                  <Grid item xs={12} >\n                   <VideoList handleVideoSelect={this.handleVideoSelect} videos={this.state.videos} />\n                  </Grid>\n\n            </Grid>\n           \n\n            <Grid justify=\"center\"  item xs={4} justifyContent=\"center\" alignItems=\"center\" >\n            \n                  <Grid item xs={12}>\n                   <VideoList handleVideoSelect={this.handleVideoSelect} videos={this.state.foodvideos} />\n                  </Grid>\n            </Grid>\n         \n          \n            <Grid justify=\"center\"  item xs={4} justifyContent=\"center\" alignItems=\"center\" >\n                \n                  <Grid item xs={12}>\n                   <VideoList handleVideoSelect={this.handleVideoSelect} videos={this.state.workvideos} />\n                  </Grid>\n            </Grid>\n\n\n          </Grid>\n          </VideoWrapper> \n            \n         </div>\n          \n        );\n    }\n}\n\nexport default Map;\n\nconst MapWrapper = styled.div`\nheight: 30vh;\nposition: relative;\n\n`\n\nconst VideoWrapper = styled.div`\nheight: 200vh;\nposition: relative;\ntop:50vh;\n`\n\nconst Insta= styled.div`\nheight: 10vh;\nposition: relative;\n\n`\n\n// const Search= styled.div`\n// height: 5vh;\n// position: absolute;\n// top: -10vh;\n// width: 30%;\n// margin: auto;\n\n\n// `"]},"metadata":{},"sourceType":"module"}