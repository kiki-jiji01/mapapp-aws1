{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport * as yup from 'yup';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string('Enter your email'),\n  //   .email('Enter a valid country_name')\n  //   .required('country_name is required'),\n  content: yup.string('Enter your content') //   .min(8, 'content should be of minimum 8 characters length')\n  //   .required('content is required'),\n\n});\nexport function Signup() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  function handleSubmit(values, {\n    resetForm\n  }) {\n    setLoading(true);\n    axios.post(API.auth.signup, values).then(res => {\n      resetForm();\n      setSuccess(true);\n    }).finally(() => setLoading(false));\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password1: '',\n      password2: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [success && \"You will receive a verification email.\", loading && \"Loading...\", /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      sx: {\n        marginTop: \"20vh\"\n      },\n      children: [loading && \"Loading...\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"email\",\n          name: \"email\",\n          label: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"password1\",\n          name: \"password1\",\n          label: \"password1\",\n          type: \"password1\",\n          value: formik.values.password1,\n          onChange: formik.handleChange,\n          error: formik.touched.password1 && Boolean(formik.errors.password1),\n          helperText: formik.touched.password1 && formik.errors.password1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          id: \"password2\",\n          name: \"password2\",\n          label: \"password2\",\n          type: \"password2\",\n          value: formik.values.password2,\n          onChange: formik.handleChange,\n          error: formik.touched.password2 && Boolean(formik.errors.password2),\n          helperText: formik.touched.password2 && formik.errors.password2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          sx: {\n            marginTop: 36\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"nKaagOgY6wHB9nn8DLuZCduMDCQ=\", false, function () {\n  return [useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/SignUp.js"],"names":["useState","Formik","Field","Form","axios","API","yup","Container","useFormik","Button","TextField","validationSchema","object","email","string","content","Signup","loading","setLoading","success","setSuccess","handleSubmit","values","resetForm","post","auth","signup","then","res","finally","formik","initialValues","password1","password2","onSubmit","marginTop","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport * as yup from 'yup';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst validationSchema = yup.object({\n    email: yup\n      .string('Enter your email'),\n    //   .email('Enter a valid country_name')\n    //   .required('country_name is required'),\n    content: yup\n      .string('Enter your content')\n    //   .min(8, 'content should be of minimum 8 characters length')\n    //   .required('content is required'),\n  });\n\nexport function Signup() {\n    const [loading, setLoading] = useState(false)\n    const [success, setSuccess] = useState(false)\n    \n    function handleSubmit(values, { resetForm }) {\n        setLoading(true)\n        axios.post(API.auth.signup, values)\n            .then(res => {\n                resetForm()\n                setSuccess(true)\n            })\n            .finally(() => setLoading(false))\n    }\n\n    const formik = useFormik({\n        initialValues: {\n          email: '',\n          password1: '',\n          password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit\n      });\n\n\n    return (\n        <div>\n            {success && \"You will receive a verification email.\"}\n            {loading && \"Loading...\"}\n            <Container component=\"main\" maxWidth=\"xs\" sx={{ marginTop: \"20vh\"}}>\n            {loading && \"Loading...\"}\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                fullWidth\n                id=\"email\"\n                name=\"email\"\n                label=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n                />\n                <TextField\n                fullWidth\n                id=\"password1\"\n                name=\"password1\"\n                label=\"password1\"\n                type=\"password1\"\n                value={formik.values.password1}\n                onChange={formik.handleChange}\n                error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                helperText={formik.touched.password1 && formik.errors.password1}\n                />\n                <TextField\n                fullWidth\n                id=\"password2\"\n                name=\"password2\"\n                label=\"password2\"\n                type=\"password2\"\n                value={formik.values.password2}\n                onChange={formik.handleChange}\n                error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                helperText={formik.touched.password2 && formik.errors.password2}\n                />\n                <Button  variant=\"contained\" fullWidth type=\"submit\" sx={{ marginTop: 36}}>\n                Submit\n                </Button>\n            </form>\n           \n        </Container>\n        </div>\n    )\n\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}