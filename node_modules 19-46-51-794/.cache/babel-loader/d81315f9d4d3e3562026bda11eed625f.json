{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport { API } from \"../api\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CountryList() {\n  _s();\n\n  const [countries, setCountries] = useState(null);\n  const {\n    user,\n    logout\n  } = useContext(AuthContext);\n  const history = useHistory();\n  useEffect(() => {\n    function fetchCountries() {\n      axios.get(API.countries.list).then(res => {\n        console.log(res.data);\n        setCountries(res.data);\n      });\n    }\n\n    fetchCountries();\n    return () => null;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!countries && \"Loading...\", countries && countries.map((country, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: user ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  maxWidth: 345\n                },\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  onClick: () => history.push(`/countries/${country.id}`),\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    component: \"img\",\n                    height: \"140\",\n                    image: country.country_image,\n                    alt: country.country_image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h5\",\n                      component: \"div\",\n                      children: country.country_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: country.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `/countries/login`,\n          children: [country.country_name, \": \", country.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n}\n\n_s(CountryList, \"n1vnOaolSJBXY3sbyhdiU93R1y0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryList.js"],"names":["useEffect","useState","useContext","axios","NavLink","API","AuthContext","Card","CardActions","CardContent","CardMedia","Button","Typography","CardActionArea","Grid","Box","useHistory","CountryList","countries","setCountries","user","logout","history","fetchCountries","get","list","then","res","console","log","data","map","country","i","display","flexWrap","maxWidth","push","id","country_image","country_name","content"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA+BC,UAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEmB,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBnB,UAAU,CAACI,WAAD,CAAnC;AACA,QAAMgB,OAAO,GAAGN,UAAU,EAA1B;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASuB,cAAT,GAA0B;AACxBpB,MAAAA,KAAK,CAACqB,GAAN,CAAUnB,GAAG,CAACa,SAAJ,CAAcO,IAAxB,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAX,QAAAA,YAAY,CAACQ,GAAG,CAACG,IAAL,CAAZ;AACD,OAJH;AAKD;;AACDP,IAAAA,cAAc;AACd,WAAO,MAAM,IAAb;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAGE;AAAA,eACK,CAACL,SAAD,IAAc,YADnB,EAEKA,SAAS,IAAIA,SAAS,CAACa,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAExC,0BAGE;AAAA,kBACCb,IAAI,gBACH,QAAC,GAAD;AACF,UAAA,EAAE,EAAE;AACFc,YAAAA,OAAO,EAAE,MADP;AAEFC,YAAAA,QAAQ,EAAE;AAFR,WADF;AAAA,iCAMA,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAV;AAAA,uCACG,QAAC,cAAD;AAAiB,kBAAA,OAAO,EAAI,MAAMd,OAAO,CAACe,IAAR,CAAc,cAAaL,OAAO,CAACM,EAAG,EAAtC,CAAlC;AAAA,0CACE,QAAC,SAAD;AACE,oBAAA,SAAS,EAAC,KADZ;AAEE,oBAAA,MAAM,EAAC,KAFT;AAGE,oBAAA,KAAK,EAAEN,OAAO,CAACO,aAHjB;AAIE,oBAAA,GAAG,EAAEP,OAAO,CAACO;AAJf;AAAA;AAAA;AAAA;AAAA,0BADF,eAOE,QAAC,WAAD;AAAA,4CACE,QAAC,UAAD;AAAY,sBAAA,YAAY,MAAxB;AAAyB,sBAAA,OAAO,EAAC,IAAjC;AAAsC,sBAAA,SAAS,EAAC,KAAhD;AAAA,gCACEP,OAAO,CAACQ;AADV;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,OAApB;AAA4B,sBAAA,KAAK,EAAC,gBAAlC;AAAA,gCACER,OAAO,CAACS;AADV;AAAA;AAAA;AAAA;AAAA,4BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,gBADG,gBA+BD,QAAC,OAAD;AAAS,UAAA,EAAE,EAAG,kBAAd;AAAA,qBACCT,OAAO,CAACQ,YADT,QACyBR,OAAO,CAACS,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCJ,uBAHF;AA2CH,KA7Ca,CAFlB;AAAA,kBAHF;AAwDD;;GA1EQxB,W;UAGSD,U;;;KAHTC,W;AA4ET,eAAeA,WAAf","sourcesContent":["import { useEffect, useState , useContext} from \"react\"\nimport axios from \"axios\"\nimport { NavLink } from \"react-router-dom\"\nimport { API } from \"../api\"\nimport { AuthContext } from \"../contexts/AuthContext\"\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport {useHistory} from 'react-router-dom';\n\n\nfunction CountryList() {\n  const [countries, setCountries] = useState(null)\n  const { user ,logout } = useContext(AuthContext)\n  const history = useHistory();\n\n\n  useEffect(() => {\n    function fetchCountries() {\n      axios.get(API.countries.list)\n        .then(res => {\n          console.log(res.data)\n          setCountries(res.data)\n        })\n    }\n    fetchCountries()\n    return () => null\n  }, [])\n\n  return (\n    \n    \n    <>\n        {!countries && \"Loading...\"}\n        {countries && countries.map((country, i) => {\n\n            return (\n              \n            \n              <>\n              {user ? (\n                <Box\n              sx={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                }}\n              >\n                <Grid container>\n                 <Grid item xs={4}>\n                   <Card sx={{ maxWidth: 345 }}>\n                      <CardActionArea  onClick = {() => history.push(`/countries/${country.id}`)}>\n                        <CardMedia\n                          component=\"img\"\n                          height=\"140\"\n                          image={country.country_image}\n                          alt={country.country_image}\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\n                           {country.country_name}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                           {country.content}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </Grid>\n                </Grid>\n                </Box>\n                ):(\n                  <NavLink to={`/countries/login`}>\n                  {country.country_name}: {country.content}\n                 </NavLink>\n              )}  \n              </> \n             \n            )\n\n        })}\n        \n    \n    </>\n    \n  );\n}\n\nexport default CountryList"]},"metadata":{},"sourceType":"module"}