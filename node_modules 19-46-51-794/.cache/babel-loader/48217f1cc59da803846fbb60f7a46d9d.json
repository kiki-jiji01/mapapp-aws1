{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryDetail.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport { API } from \"../api\";\nimport { useHistory, NavLink } from 'react-router-dom';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport Grid from '@mui/material/Grid';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryDetail() {\n  _s();\n\n  const [country, setCountry] = useState(null);\n  const {\n    id\n  } = useParams();\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  useEffect(() => {\n    function fetchCountry() {\n      axios.get(API.countries.retrieve(id), {\n        headers: {\n          \"Authorization\": `Token ${token}`\n        }\n      }).then(res => {\n        console.log(res.data);\n        setCountry(res.data);\n      });\n    }\n\n    fetchCountry();\n    return () => null;\n  }, [id, token]);\n  return /*#__PURE__*/_jsxDEV(Detail, {\n    children: country && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        children: country.country_image && /*#__PURE__*/_jsxDEV(CountryImg, {\n          children: /*#__PURE__*/_jsxDEV(CountryImg1, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: country.country_image,\n              alt: country.country_image,\n              height: \"auto\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 7,\n        children: [country.country_name, country.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this) //   {country.is_owner && (\n  //   <div>\n  //   <NavLink to={`/countries/${country.id}/update`}>\n  //  Update\n  //   </NavLink>\n  //   <NavLink to={`/countries/${country.id}/delete`}>\n  //  Delete\n  //   </NavLink>\n  //   </div>\n  //   )}\n  ;\n}\n\n_s(CountryDetail, \"Qw0W3S9mJA05Gb5lzQ+laPs7xSU=\", false, function () {\n  return [useParams];\n});\n\n_c = CountryDetail;\nexport default CountryDetail;\nconst Detail = styled.div`\n\nmargin-top: 50vh;\n\n\n`;\n_c2 = Detail;\nconst CountryImg = styled.div`\n\npadding: 10% ;\n\n`;\n_c3 = CountryImg;\nconst CountryImg1 = styled.div`\n\nheight: 100%;\nobject-fit: contain;\n\n`;\n_c4 = CountryImg1;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CountryDetail\");\n$RefreshReg$(_c2, \"Detail\");\n$RefreshReg$(_c3, \"CountryImg\");\n$RefreshReg$(_c4, \"CountryImg1\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryDetail.js"],"names":["axios","useEffect","useState","useContext","useParams","API","useHistory","NavLink","AuthContext","Grid","styled","CountryDetail","country","setCountry","id","user","token","fetchCountry","get","countries","retrieve","headers","then","res","console","log","data","country_image","country_name","content","Detail","div","CountryImg","CountryImg1"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAAsBb,UAAU,CAACK,WAAD,CAAtC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,aAAUgB,YAAV,GAAyB;AACvBjB,MAAAA,KAAK,CAACkB,GAAN,CAAUb,GAAG,CAACc,SAAJ,CAAcC,QAAd,CAAuBN,EAAvB,CAAV,EAAqC;AACnCO,QAAAA,OAAO,EAAE;AACP,2BAAkB,SAAQL,KAAM;AADzB;AAD0B,OAArC,EAKGM,IALH,CAKQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAb,QAAAA,UAAU,CAACU,GAAG,CAACG,IAAL,CAAV;AACD,OARH;AASD;;AACDT,IAAAA,YAAY;AACZ,WAAO,MAAM,IAAb;AACD,GAdQ,EAcN,CAACH,EAAD,EAAKE,KAAL,CAdM,CAAT;AAgBA,sBAEE,QAAC,MAAD;AAAA,cACCJ,OAAO,iBACR,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACEA,OAAO,CAACe,aAAR,iBACK,QAAC,UAAD;AAAA,iCACE,QAAC,WAAD;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEf,OAAO,CAACe,aAAlB;AAAkC,cAAA,GAAG,EAAEf,OAAO,CAACe,aAA/C;AAA8D,cAAA,MAAM,EAAC,MAArE;AAA4E,cAAA,KAAK,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFP;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,mBACEf,OAAO,CAACgB,YADV,EAEEhB,OAAO,CAACiB,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UAFF,CAuBQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCR;AAuCH;;GA5DelB,a;UAEGP,S;;;KAFHO,a;AA8DhB,eAAeA,aAAf;AAGA,MAAMmB,MAAM,GAAGpB,MAAM,CAACqB,GAAI;AAC1B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAON,MAAME,UAAU,GAAGtB,MAAM,CAACqB,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAMC,U;AAMN,MAAMC,WAAW,GAAGvB,MAAM,CAACqB,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;MAAME,W","sourcesContent":["import axios from \"axios\"\nimport { useEffect, useState ,useContext} from \"react\"\nimport { useParams } from \"react-router\"\nimport { API } from \"../api\"\nimport {useHistory, NavLink} from 'react-router-dom';\nimport { AuthContext } from \"../contexts/AuthContext\"\nimport Grid from '@mui/material/Grid';\nimport styled from \"styled-components\"\n\nexport function CountryDetail() {\n    const [country, setCountry] = useState(null)\n    const { id } = useParams()\n    const { user: { token } } = useContext(AuthContext)\n\n    useEffect(() => {\n      function  fetchCountry() {\n        axios.get(API.countries.retrieve(id),{\n          headers: {\n            \"Authorization\": `Token ${token}`\n        }\n        })\n          .then(res => {\n            console.log(res.data)\n            setCountry(res.data)\n          })\n      }\n      fetchCountry()\n      return () => null\n    }, [id, token])\n\n    return (\n        \n      <Detail>\n      {country && (\n      <Grid container spacing={2}>\n        <Grid item xs={5}>\n         {country.country_image && (\n               <CountryImg>\n                 <CountryImg1>\n                   <img src={country.country_image}  alt={country.country_image} height=\"auto\" width=\"100%\"/>\n                 </CountryImg1>\n               </CountryImg>     \n          )}\n        </Grid>\n        <Grid item xs={7}>\n         {country.country_name}\n         {country.content}\n        </Grid>\n      </Grid>\n      )}\n      </Detail>\n     \n     \n            //   {country.is_owner && (\n            //   <div>\n            //   <NavLink to={`/countries/${country.id}/update`}>\n            //  Update\n            //   </NavLink>\n            //   <NavLink to={`/countries/${country.id}/delete`}>\n            //  Delete\n            //   </NavLink>\n            //   </div>\n            //   )}\n         \n          \n      \n           \n        \n    )\n}\n\nexport default CountryDetail\n\n\nconst Detail = styled.div`\n\nmargin-top: 50vh;\n\n\n`\n\nconst CountryImg = styled.div`\n\npadding: 10% ;\n\n`\n\nconst CountryImg1 = styled.div`\n\nheight: 100%;\nobject-fit: contain;\n\n`\n\n\n"]},"metadata":{},"sourceType":"module"}