{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryUpdate() {\n  _s();\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingCountry, setLoadingCountry] = useState(false);\n  const [country, setCountry] = useState(null);\n  const {\n    id\n  } = useParams();\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  useEffect(() => {\n    setLoadingCountry(true);\n\n    function fetchCountry() {\n      axios.get(API.countries.retrieve(id)).then(res => {\n        setCountry(res.data);\n      }).finally(() => {\n        setLoadingCountry(false);\n      });\n    }\n\n    fetchCountry();\n    return () => null;\n  }, [id]);\n  console.log(country);\n\n  function handleSubmit(values) {\n    setLoading(true);\n    axios.put(API.countries.update(id), values, {\n      headers: {\n        \"Authorization\": `Token ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      history.push('/countries/${id}');\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && \"Submitting...\", loadingCountry && \"Fetching Country Details...\", country && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        country_name: country.country_name,\n        content: country.content\n      },\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country_name\",\n          children: \"country_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country_name\",\n          name: \"country_name\",\n          placeholder: \"Japan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), touched.country_name && errors.country_name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.country_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"content\",\n          name: \"content\",\n          placeholder: \"Cook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), touched.content && errors.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryUpdate, \"SKIfjFCAI6rqUYk5nj9f3FiOyyg=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CountryUpdate;\nexport default CountryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryUpdate\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js"],"names":["useContext","useEffect","useState","Formik","Field","Form","useHistory","NavLink","axios","API","AuthContext","useParams","CountryUpdate","history","loading","setLoading","loadingCountry","setLoadingCountry","country","setCountry","id","user","token","fetchCountry","get","countries","retrieve","then","res","data","finally","console","log","handleSubmit","values","put","update","headers","push","country_name","content","errors","touched"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\n\nexport function CountryUpdate() {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false)\n    const [loadingCountry, setLoadingCountry] = useState(false)\n\n    const [country, setCountry] = useState(null)\n    const { id } = useParams()\n\n    const { user: { token } } = useContext(AuthContext)\n    \n    useEffect(() => {\n        setLoadingCountry(true)\n        function fetchCountry() {\n            axios.get(API.countries.retrieve(id))\n                .then(res => {\n                    setCountry(res.data)\n                })\n                .finally(() => {\n                    setLoadingCountry(false)\n                })\n        }\n        fetchCountry()\n        return () => null\n    }, [id])\n\n    console.log(country)\n\n    function handleSubmit(values) {\n        setLoading(true)\n        axios.put(API.countries.update(id), values, {\n            headers: {\n                \"Authorization\": `Token ${token}`\n            }\n        })\n            .then(res => {\n                console.log(res.data)\n                history.push('/countries/${id}')\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <div>\n            {loading && \"Submitting...\"}\n            {loadingCountry && \"Fetching Country Details...\"}\n            {country && (\n                <Formik\n                    initialValues={{\n                        country_name: country.country_name,\n                        content: country.content,\n                       \n                    }}\n                    onSubmit={handleSubmit}>\n\n                    {({ errors, touched }) => (\n                        <Form>\n                            <label htmlFor=\"country_name\">country_name</label>\n                        <Field id=\"country_name\" name=\"country_name\" placeholder=\"Japan\" />\n                        {touched.country_name && errors.country_name && <div>{errors.country_name}</div>}\n\n                        <label htmlFor=\"content\">content</label>\n                        <Field id=\"content\" name=\"content\" placeholder=\"Cook\" />\n                        {touched.content && errors.content && <div>{errors.content}</div>}\n\n\n                        <button type=\"submit\">Submit</button>\n                        </Form>\n                    )}\n\n                </Formik>\n            )}\n        </div>\n    )\n\n}\n\nexport default CountryUpdate"]},"metadata":{},"sourceType":"module"}