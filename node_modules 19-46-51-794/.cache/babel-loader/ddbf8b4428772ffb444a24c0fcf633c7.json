{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImagePreview({\n  file\n}) {\n  _s();\n\n  const [imageSrc, setImageSrc] = useState(null);\n  useEffect(() => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setImageSrc(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!imageSrc && \"Loading...\", imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      className: \"h-20 w-20 px-3 py-3\",\n      alt: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImagePreview, \"OOxWgbNG5e3A0ykrVn+RiF3dlH4=\");\n\n_c = ImagePreview;\nexport function CountryUpdate() {\n  _s2();\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingCountry, setLoadingCountry] = useState(false);\n  const [file, setFile] = useState(null);\n  const [country, setCountry] = useState(null);\n  const {\n    id\n  } = useParams();\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (country && !country.is_owner) {\n      history.push(`/`);\n    }\n\n    return () => null;\n  });\n  useEffect(() => {\n    setLoadingCountry(true);\n\n    function fetchCountry() {\n      const data = new FormData();\n      data.append('country_image', file);\n      data.append('content', values.content);\n      data.append('country_name', values.country_name);\n      axios.get(API.countries.retrieve(id), data, {\n        headers: {\n          \"Authorization\": `Token ${token}`\n        }\n      }).then(res => {\n        setCountry(res.data);\n      }).finally(() => {\n        setLoadingCountry(false);\n      });\n    }\n\n    fetchCountry();\n    return () => null;\n  }, [id, token]);\n  console.log(country);\n\n  function handleSubmit(values) {\n    setLoading(true);\n    axios.put(API.countries.update(id), values, {\n      headers: {\n        \"Authorization\": `Token ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      history.push(`/countries/${id}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && \"Submitting...\", loadingCountry && \"Fetching Country Details...\", country && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        country_image: country.country_image,\n        country_name: country.country_name,\n        content: country.content\n      },\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country_name\",\n          children: \"country_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country_name\",\n          name: \"country_name\",\n          placeholder: \"Japan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), touched.country_name && errors.country_name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.country_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"content\",\n          name: \"content\",\n          placeholder: \"Cook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), touched.content && errors.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"country_image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setFile(e.target.files[0]),\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), file && /*#__PURE__*/_jsxDEV(ImagePreview, {\n            file: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CountryUpdate, \"LEY6P0rtXZBZOIIQ1j5fPaPvCE8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c2 = CountryUpdate;\nexport default CountryUpdate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImagePreview\");\n$RefreshReg$(_c2, \"CountryUpdate\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js"],"names":["useContext","useEffect","useState","Formik","Field","Form","useHistory","NavLink","axios","API","AuthContext","useParams","ImagePreview","file","imageSrc","setImageSrc","reader","FileReader","onloadend","result","readAsDataURL","name","CountryUpdate","history","loading","setLoading","loadingCountry","setLoadingCountry","setFile","country","setCountry","id","user","token","is_owner","push","fetchCountry","data","FormData","append","values","content","country_name","get","countries","retrieve","headers","then","res","finally","console","log","handleSubmit","put","update","country_image","errors","touched","e","target","files"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\n\n\nfunction ImagePreview({ file }) {\n    const [imageSrc, setImageSrc] = useState(null)\n\n    useEffect(() => {\n        const reader = new FileReader()\n        reader.onloadend = () => {\n            setImageSrc(reader.result)\n        }\n        reader.readAsDataURL(file)\n    })\n\n    return (\n        <div>\n            {!imageSrc && \"Loading...\"}\n            {imageSrc && (\n                <img src={imageSrc} className=\"h-20 w-20 px-3 py-3\" alt={file.name} />\n            )}\n        </div>\n    )\n}\n\n\nexport function CountryUpdate() {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false)\n    const [loadingCountry, setLoadingCountry] = useState(false)\n    const [file, setFile] = useState(null)\n    const [country, setCountry] = useState(null)\n    const { id } = useParams()\n\n    const { user: { token } } = useContext(AuthContext)\n\n    useEffect(() => {\n        if (country && !country.is_owner) {\n            history.push(`/`)\n        }\n        return () => null\n    })\n    \n    useEffect(() => {\n        setLoadingCountry(true)\n        function fetchCountry() {\n            const data = new FormData()\n            data.append('country_image', file)\n            data.append('content', values.content)\n            data.append('country_name', values.country_name)\n\n            axios.get(API.countries.retrieve(id),data,{\n                headers: {\n                    \"Authorization\": `Token ${token}`\n                }\n            })\n                .then(res => {\n                    setCountry(res.data)\n                })\n                .finally(() => {\n                    setLoadingCountry(false)\n                })\n        }\n        fetchCountry()\n        return () => null\n    }, [id, token])\n\n    console.log(country)\n\n    function handleSubmit(values) {\n        setLoading(true)\n        axios.put(API.countries.update(id), values, {\n            headers: {\n                \"Authorization\": `Token ${token}`\n            }\n        })\n            .then(res => {\n                console.log(res.data)\n                history.push(`/countries/${id}`)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <div>\n            {loading && \"Submitting...\"}\n            {loadingCountry && \"Fetching Country Details...\"}\n            {country && (\n                <Formik\n                    initialValues={{\n                        country_image:country.country_image,\n                        country_name: country.country_name,\n                        content: country.content,\n                       \n                    }}\n                    onSubmit={handleSubmit}>\n\n                    {({ errors, touched }) => (\n                        <Form>\n                            <label htmlFor=\"country_name\">country_name</label>\n                        <Field id=\"country_name\" name=\"country_name\" placeholder=\"Japan\" />\n                        {touched.country_name && errors.country_name && <div>{errors.country_name}</div>}\n\n                        <label htmlFor=\"content\">content</label>\n                        <Field id=\"content\" name=\"content\" placeholder=\"Cook\" />\n                        {touched.content && errors.content && <div>{errors.content}</div>}\n\n                        <div >\n                            <label >\n                                <span >country_image</span>\n                                <input\n                                onChange={e => setFile(e.target.files[0])}\n                                type=\"file\"\n                               \n                                />\n                            </label>\n                            {file && (\n                                <ImagePreview file={file} />\n                            )}\n                        </div>\n\n                        \n\n\n                        <button type=\"submit\">Submit</button>\n                        </Form>\n                    )}\n\n                </Formik>\n            )}\n        </div>\n    )\n\n}\n\nexport default CountryUpdate"]},"metadata":{},"sourceType":"module"}