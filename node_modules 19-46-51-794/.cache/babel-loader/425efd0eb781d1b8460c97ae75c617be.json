{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryDelete.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryDelete() {\n  _s();\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingCountry, setLoadingCountry] = useState(false);\n  const [country, setCountry] = useState(null);\n  const {\n    id\n  } = useParams();\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (country && !country.is_owner) {\n      history.push(`/`);\n    }\n\n    return () => null;\n  });\n  useEffect(() => {\n    setLoadingCountry(true);\n\n    function fetchCountry() {\n      axios.get(API.countries.retrieve(id), {\n        headers: {\n          \"Authorization\": `Token ${token}`\n        }\n      }).then(res => {\n        setCountry(res.data);\n      }).finally(() => {\n        setLoadingCountry(false);\n      });\n    }\n\n    fetchCountry();\n    return () => null;\n  }, [id, token]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    axios.delete(API.countries.delete(id), {\n      headers: {\n        \"Authorization\": `Token ${token}`\n      }\n    }).then(res => {\n      history.push(`/countries`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    sx: {\n      marginTop: \"20vh\"\n    },\n    children: [loading && \"Submitting...\", loadingCountry && \"Fetching Country Details...\", country && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryDelete, \"fuTlHC//7A7ivJG0RAnLBjlutnM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CountryDelete;\nexport default CountryDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDelete\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryDelete.js"],"names":["useContext","useEffect","useState","useHistory","NavLink","axios","API","AuthContext","useParams","Container","useFormik","Button","TextField","CountryDelete","history","loading","setLoading","loadingCountry","setLoadingCountry","country","setCountry","id","user","token","is_owner","push","fetchCountry","get","countries","retrieve","headers","then","res","data","finally","handleSubmit","e","preventDefault","delete","marginTop"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\nimport Container from '@mui/material/Container';\nimport { useFormik } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport function CountryDelete() {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false)\n    const [loadingCountry, setLoadingCountry] = useState(false)\n\n    const [country, setCountry] = useState(null)\n    const { id } = useParams()\n\n    const { user: { token } } = useContext(AuthContext)\n\n    useEffect(() => {\n        if (country && !country.is_owner) {\n            history.push(`/`)\n        }\n        return () => null\n    })\n    \n    useEffect(() => {\n        setLoadingCountry(true)\n        function fetchCountry() {\n            axios.get(API.countries.retrieve(id),{\n                headers: {\n                    \"Authorization\": `Token ${token}`\n                }\n            })\n                .then(res => {\n                    setCountry(res.data)\n                })\n                .finally(() => {\n                    setLoadingCountry(false)\n                })\n        }\n        fetchCountry()\n        return () => null\n    }, [id,token])\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        setLoading(true)\n        axios.delete(API.countries.delete(id), {\n            headers: {\n                \"Authorization\": `Token ${token}`\n            }\n        })\n            .then(res => {\n                history.push(`/countries`)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" sx={{ marginTop: \"20vh\"}}>\n            {loading && \"Submitting...\"}\n            {loadingCountry && \"Fetching Country Details...\"}\n            {country && (\n            <Button  variant=\"contained\" fullWidth type=\"submit\" onClick = {handleSubmit}>\n                Submit\n            </Button>\n            )}\n        </Container>\n    )\n\n}\n\nexport default CountryDelete"]},"metadata":{},"sourceType":"module"}