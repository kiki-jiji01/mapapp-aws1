{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { useHistory, NavLink } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router'; // function ImagePreview({ file }) {\n//     const [imageSrc, setImageSrc] = useState(null)\n//     useEffect(() => {\n//         const reader = new FileReader()\n//         reader.onloadend = () => {\n//             setImageSrc(reader.result)\n//         }\n//         reader.readAsDataURL(file)\n//     })\n//     return (\n//         <div>\n//             {!imageSrc && \"Loading...\"}\n//             {imageSrc && (\n//                 <img src={imageSrc} className=\"h-20 w-20 px-3 py-3\" alt={file.name} />\n//             )}\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CountryUpdate() {\n  _s();\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [loadingCountry, setLoadingCountry] = useState(false);\n  const [file, setFile] = useState(null);\n  const [country, setCountry] = useState(null);\n  const {\n    id\n  } = useParams();\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (country && !country.is_owner) {\n      history.push(`/`);\n    }\n\n    return () => null;\n  });\n  useEffect(() => {\n    setLoadingCountry(true);\n\n    function fetchCountry() {\n      axios.get(API.countries.retrieve(id), {\n        headers: {\n          \"Authorization\": `Token ${token}`\n        }\n      }).then(res => {\n        setCountry(res.data);\n      }).finally(() => {\n        setLoadingCountry(false);\n      });\n    }\n\n    fetchCountry();\n    return () => null;\n  }, [id, token]);\n  console.log(country);\n\n  function handleSubmit(values) {\n    console.log(values);\n    setLoading(true); // const data = new FormData()\n    // data.append('country_image', file)\n    // data.append('content', values.content)\n    // data.append('country_name', values.country_name)\n\n    axios.put(API.countries.update(id), values, {\n      headers: {\n        \"Authorization\": `Token ${token}`\n      }\n    }).then(res => {\n      console.log(res.data);\n      history.push(`/countries/${id}`);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && \"Submitting...\", loadingCountry && \"Fetching Country Details...\", country && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        country_image: country.country_image,\n        country_name: country.country_name,\n        content: country.content\n      },\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country_name\",\n          children: \"country_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country_name\",\n          name: \"country_name\",\n          placeholder: \"Japan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), touched.country_name && errors.country_name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.country_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"content\",\n          name: \"content\",\n          placeholder: \"Cook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), touched.content && errors.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"country_image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setFile(e.target.files[0]),\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), file && /*#__PURE__*/_jsxDEV(ImagePreview, {\n            file: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryUpdate, \"LEY6P0rtXZBZOIIQ1j5fPaPvCE8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CountryUpdate;\nexport default CountryUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryUpdate\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryUpdate.js"],"names":["useContext","useEffect","useState","Formik","Field","Form","useHistory","NavLink","axios","API","AuthContext","useParams","CountryUpdate","history","loading","setLoading","loadingCountry","setLoadingCountry","file","setFile","country","setCountry","id","user","token","is_owner","push","fetchCountry","get","countries","retrieve","headers","then","res","data","finally","console","log","handleSubmit","values","put","update","country_image","country_name","content","errors","touched","e","target","files"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useParams } from 'react-router';\n\n\n// function ImagePreview({ file }) {\n//     const [imageSrc, setImageSrc] = useState(null)\n\n//     useEffect(() => {\n//         const reader = new FileReader()\n//         reader.onloadend = () => {\n//             setImageSrc(reader.result)\n//         }\n//         reader.readAsDataURL(file)\n//     })\n\n//     return (\n//         <div>\n//             {!imageSrc && \"Loading...\"}\n//             {imageSrc && (\n//                 <img src={imageSrc} className=\"h-20 w-20 px-3 py-3\" alt={file.name} />\n//             )}\n//         </div>\n//     )\n// }\n\n\n\n\nexport function CountryUpdate() {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false)\n    const [loadingCountry, setLoadingCountry] = useState(false)\n    const [file, setFile] = useState(null)\n    const [country, setCountry] = useState(null)\n    const { id } = useParams()\n\n    const { user: { token } } = useContext(AuthContext)\n\n    useEffect(() => {\n        if (country && !country.is_owner) {\n            history.push(`/`)\n        }\n        return () => null\n    })\n    \n    useEffect(() => {\n        setLoadingCountry(true)\n        function fetchCountry() {\n            axios.get(API.countries.retrieve(id),{\n                headers: {\n                    \"Authorization\": `Token ${token}`\n                }\n            })\n                .then(res => {\n                    setCountry(res.data)\n                })\n                .finally(() => {\n                    setLoadingCountry(false)\n                })\n        }\n        fetchCountry()\n        return () => null\n    }, [id, token])\n\n    console.log(country)\n\n    function handleSubmit(values) {\n        console.log(values)\n        setLoading(true)\n        // const data = new FormData()\n        // data.append('country_image', file)\n        // data.append('content', values.content)\n        // data.append('country_name', values.country_name)\n\n        axios.put(API.countries.update(id), values, {\n            headers: {\n                \"Authorization\": `Token ${token}`,\n               \n            }\n        })\n            .then(res => {\n                console.log(res.data)\n                history.push(`/countries/${id}`)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <div>\n            {loading && \"Submitting...\"}\n            {loadingCountry && \"Fetching Country Details...\"}\n            {country && (\n                <Formik\n                    initialValues={{\n                        country_image:country.country_image,\n                        country_name: country.country_name,\n                        content: country.content,\n                       \n                    }}\n                    onSubmit={handleSubmit}>\n\n                    {({ errors, touched }) => (\n                        <Form>\n                            <label htmlFor=\"country_name\">country_name</label>\n                        <Field id=\"country_name\" name=\"country_name\" placeholder=\"Japan\" />\n                        {touched.country_name && errors.country_name && <div>{errors.country_name}</div>}\n\n                        <label htmlFor=\"content\">content</label>\n                        <Field id=\"content\" name=\"content\" placeholder=\"Cook\" />\n                        {touched.content && errors.content && <div>{errors.content}</div>}\n\n                        <div >\n                            <label >\n                                <span >country_image</span>\n                                <input\n                                onChange={e => setFile(e.target.files[0])}\n                                type=\"file\"\n                               \n                                />\n                            </label>\n                            {file && (\n                                <ImagePreview file={file} />\n                            )}\n                        </div>\n\n\n\n                        <button type=\"submit\">Submit</button>\n                        </Form>\n                    )}\n\n                </Formik>\n            )}\n        </div>\n    )\n\n}\n\nexport default CountryUpdate"]},"metadata":{},"sourceType":"module"}