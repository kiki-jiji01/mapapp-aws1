{"ast":null,"code":"var _jsxFileName = \"/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryCreate.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Formik, Field, Form } from 'formik';\nimport axios from \"axios\";\nimport { API } from '../api';\nimport { useContext, useState } from 'react';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImagePreview({\n  file\n}) {\n  _s();\n\n  const [imageSrc, setImageSrc] = useState(null);\n  useEffect(() => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n      setImageSrc(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!imageSrc && \"Loading...\", imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      className: \"h-20 w-20 px-3 py-3\",\n      alt: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ImagePreview, \"OOxWgbNG5e3A0ykrVn+RiF3dlH4=\");\n\n_c = ImagePreview;\nexport function CountryCreate() {\n  _s2();\n\n  const [loading, setLoading] = useState(false);\n  const {\n    user: {\n      token\n    }\n  } = useContext(AuthContext);\n  const [file, setFile] = useState(null);\n  const history = useHistory();\n\n  function handleSubmit(values) {\n    console.log(values);\n    setLoading(true);\n    const data = new FormData();\n    data.append('country_image', file);\n    data.append('content', values.content);\n    data.append('country_name', values.country_name);\n    axios.post(API.countries.create, data, {\n      headers: {\n        \"Authorization\": `Token ${token}`\n      }\n    }).then(res => {\n      history.push(`/countries`);\n      console.log(res.data);\n    }).finally(() => {\n      setLoading(false);\n    });\n    return () => null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && \"Loading...\", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        country_image: \"\",\n        country_name: '',\n        content: ''\n      },\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country_name\",\n          children: \"country_name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"country_name\",\n          name: \"country_name\",\n          placeholder: \"Japan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), touched.country_name && errors.country_name && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.country_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"content\",\n          name: \"content\",\n          placeholder: \"Cook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), touched.content && errors.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"country_image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setFile(e.target.files[0]),\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), file && /*#__PURE__*/_jsxDEV(ImagePreview, {\n            file: file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CountryCreate, \"klUoJHWm9fat+UaKUDa35DTsmiI=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = CountryCreate;\nexport default CountryCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ImagePreview\");\n$RefreshReg$(_c2, \"CountryCreate\");","map":{"version":3,"sources":["/Users/genta/mapapp-aws1/mapapp-aws1/src/countries/components/CountryCreate.js"],"names":["Formik","Field","Form","axios","API","useContext","useState","AuthContext","useHistory","ImagePreview","file","imageSrc","setImageSrc","useEffect","reader","FileReader","onloadend","result","readAsDataURL","name","CountryCreate","loading","setLoading","user","token","setFile","history","handleSubmit","values","console","log","data","FormData","append","content","country_name","post","countries","create","headers","then","res","push","finally","country_image","errors","touched","e","target","files"],"mappings":"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","sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport axios from \"axios\"\nimport { API } from '../api'\nimport {  useContext,useState } from 'react';\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport {useHistory} from 'react-router-dom';\n\n\n\nfunction ImagePreview({ file }) {\n    const [imageSrc, setImageSrc] = useState(null)\n\n    useEffect(() => {\n        const reader = new FileReader()\n        reader.onloadend = () => {\n            setImageSrc(reader.result)\n        }\n        reader.readAsDataURL(file)\n    })\n\n    return (\n        <div>\n            {!imageSrc && \"Loading...\"}\n            {imageSrc && (\n                <img src={imageSrc} className=\"h-20 w-20 px-3 py-3\" alt={file.name} />\n            )}\n        </div>\n    )\n}\n\n\n\nexport function CountryCreate() {\n    const [loading, setLoading] = useState(false)\n    const { user: { token } } = useContext(AuthContext)\n    const [file, setFile] = useState(null)\n    const history = useHistory();\n\n    function handleSubmit(values) {\n        console.log(values)\n        setLoading(true)\n        const data = new FormData()\n        data.append('country_image', file)\n        data.append('content', values.content)\n        data.append('country_name', values.country_name)\n\n        axios.post(API.countries.create, data,{\n            headers: {\n                \"Authorization\": `Token ${token}`\n            }\n        })\n            .then(res => {\n                history.push(`/countries`)\n                console.log(res.data)\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n            return () => null\n    }\n\n    return (\n        <div>\n            {loading && \"Loading...\"}\n            <Formik\n                initialValues={{\n                    country_image:\"\",\n                    country_name: '',\n                    content: '',\n                   \n                }}\n                onSubmit={handleSubmit}>\n\n                {({ errors, touched }) => (\n                    <Form>\n                        <label htmlFor=\"country_name\">country_name</label>\n                        <Field id=\"country_name\" name=\"country_name\" placeholder=\"Japan\" />\n                        {touched.country_name && errors.country_name && <div>{errors.country_name}</div>}\n\n                        <label htmlFor=\"content\">content</label>\n                        <Field id=\"content\" name=\"content\" placeholder=\"Cook\" />\n                        {touched.content && errors.content && <div>{errors.content}</div>}\n\n                        <div >\n                            <label >\n                                <span >country_image</span>\n                                <input\n                                onChange={e => setFile(e.target.files[0])}\n                                type=\"file\"\n                               \n                                />\n                            </label>\n                            {file && (\n                                <ImagePreview file={file} />\n                            )}\n                        </div>\n\n\n                        <button type=\"submit\">Submit</button>\n                    </Form>\n                )}\n\n            </Formik>\n        </div>\n    )\n\n}\n\nexport default CountryCreate"]},"metadata":{},"sourceType":"module"}